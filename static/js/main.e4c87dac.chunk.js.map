{"version":3,"sources":["view/homeview/HomeView.js","view/pokeview/PokeView.js","routes/RoutingPath.js","routes/Routes.js","components/navigation/navigationdesktop/NavigationDesktop.js","components/navigation/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["HomeView","PokeView","useState","serverResponse","setServerResponse","count","setCount","phrase","useLocation","fetchData","a","API_URL","Axios","get","response","alert","data","name","onClick","Routes","children","basename","exact","path","RoutingPath","component","NavigationDesktop","className","to","pathname","Navigation","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAEaA,EAAW,WACpB,OACI,8BACI,wD,yDCCCC,EAAW,WAAO,IAAD,EAC1B,EAA4CC,qBAA5C,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACQC,EAAWC,cAAXD,OAGFE,EAAS,uCAAG,8BAAAC,EAAA,6DACRC,EADQ,4CACuCN,GADvC,kBAGaO,IAAMC,IAAIF,GAHvB,OAGJG,EAHI,OAIVV,EAAkBU,GAClBR,EAASD,EAAQ,GALP,gDAOVU,MAAM,qCAPI,yDAAH,qDAYf,OACI,gCACI,6BAAKR,IACL,sDACA,oCAAKJ,QAAL,IAAKA,GAAL,UAAKA,EAAgBa,YAArB,aAAK,EAAsBC,OAC3B,wBAAQC,QAAS,kBAAMT,KAAvB,+B,QC1BG,EAHE,IAGF,EAFE,QCKJU,EAAS,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACpB,OACI,eAAC,IAAD,CAAeC,SAAS,yBAAxB,UACKD,EACD,eAAC,IAAD,WACI,cAAC,IAAD,CAAOE,OAAK,EAACC,KAAMC,EAAsBC,UAAWxB,IACpD,cAAC,IAAD,CAAOqB,OAAK,EAACC,KAAMC,EAAsBC,UAAWzB,WCPvD0B,G,MAAoB,WAC7B,OACI,8BACI,sBAAKC,UAAU,SAAf,UACI,cAAC,IAAD,CAAMA,UAAU,OAAOC,GAAIJ,EAA3B,kBACA,cAAC,IAAD,CAAMG,UAAU,OAAOC,GAAI,CAAEC,SAAUL,EAAsBjB,OAAQ,UAArE,yBCRHuB,EAAa,WACtB,OACI,8BACI,cAAC,EAAD,OCMGC,MARf,WACE,OACE,cAAC,EAAD,UACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e4c87dac.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const HomeView = () => {\r\n    return (\r\n        <div>\r\n            <h1>You are in HomeView</h1>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Axios from 'axios';\r\nimport { useState } from 'react';\r\nimport { useLocation } from 'react-router';\r\n\r\n\r\nexport const PokeView = () => {\r\n    const [serverResponse, setServerResponse] = useState();\r\n    const [count, setCount] = useState(1);\r\n    const { phrase } = useLocation();\r\n    \r\n\r\n    const fetchData = async () => {\r\n        const API_URL = `https://pokeapi.co/api/v2/pokemon/${count}`;\r\n        try {\r\n            const response = await Axios.get(API_URL);\r\n            setServerResponse(response);\r\n            setCount(count + 1);\r\n        } catch(error) {\r\n            alert(\"Error when retrieving data: \" + error);\r\n\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>{phrase}</h1>\r\n            <h1>You are in Poke View</h1>\r\n            <h2>{serverResponse?.data?.name}</h2>\r\n            <button onClick={() => fetchData()}>Get a pokemon</button>\r\n        </div>\r\n    );\r\n}\r\n","const homeView = \"/\";\r\nconst pokeView = \"/poke\";\r\n\r\nexport default {\r\n    homeView,\r\n    pokeView,\r\n};","import { HomeView } from \"../view/homeview/HomeView\";\r\nimport {PokeView} from \"../view/pokeview/PokeView\";\r\nimport React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport RoutingPath from \"./RoutingPath\";\r\n\r\nexport const Routes = ({children}) => {\r\n    return (\r\n        <BrowserRouter basename=\"/ReactSecondAssignment\">\r\n            {children}\r\n            <Switch>\r\n                <Route exact path={RoutingPath.pokeView} component={PokeView}/>\r\n                <Route exact path={RoutingPath.homeView} component={HomeView} />\r\n            </Switch>\r\n            \r\n        </BrowserRouter>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport \"./NavigationDesktop.css\";\r\nimport RoutingPath from '../../../routes/RoutingPath';\r\n\r\nexport const NavigationDesktop = () => {\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar\">\r\n                <Link className=\"home\" to={RoutingPath.homeView}>Home</Link>\r\n                <Link className=\"poke\" to={{ pathname: RoutingPath.pokeView, phrase: \"Hello!\" }}>Poke</Link>\r\n            </nav>\r\n           \r\n        </div>\r\n    )\r\n}\r\n","import { NavigationDesktop } from \"./navigationdesktop/NavigationDesktop\";\r\n\r\nexport const Navigation = () => {\r\n    return (\r\n        <div>\r\n            <NavigationDesktop />\r\n        </div>\r\n    );\r\n};\r\n","import {Routes} from \"./routes/Routes\";\nimport {Navigation} from \"./components/navigation/Navigation\";\n\nfunction App() {\n  return (\n    <Routes>\n      <Navigation />\n    </Routes>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}